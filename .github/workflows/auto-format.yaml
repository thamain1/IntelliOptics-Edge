name: auto-format
on: pull_request

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.11"

jobs:
  format:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry via pipx (1.8.3)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          python -m pipx ensurepath
          ~/.local/bin/pipx install "poetry==1.8.3"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "PATH=$HOME/.local/bin:$PATH" >> "$GITHUB_ENV"

      - name: Install lint deps
        run: |
          poetry --version
          make install-lint

      - name: Run formatter
        run: make format

      - name: Check for modified files
        id: git-check
        run: |
          git status
          if git diff-index --quiet HEAD --; then
            echo "modified=false" >> "$GITHUB_OUTPUT"
          else
            echo "modified=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name "Auto-format Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git commit -am "Automatically reformatting code with black and isort"
          git push
