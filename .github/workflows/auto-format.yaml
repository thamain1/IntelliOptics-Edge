name: auto-format
on: pull_request

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.8.3"
  # Prevent poetry from writing config; install deps into runner env
  POETRY_VIRTUALENVS_CREATE: "false"

jobs:
  format:
    # Only run on PRs from this repo (not forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry (no global config writes)
        run: |
          python -m pip install --upgrade pip pipx
          pipx install "poetry==${POETRY_VERSION}"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          poetry --version

      - name: Install Linting Dependencies
        run: |
          make install-lint

      - name: Run Formatter
        run: |
          make format

      - name: Check for Modified Files
        id: git-check
        run: |
          git status
          if git diff-index --quiet HEAD --; then
            echo "modified=false" >> "$GITHUB_OUTPUT"
          else
            echo "modified=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Push Changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Auto-format Bot'
          git config --global user.email 'admin@4wardmotions.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git commit -am "Automatically reformatting code with black and isort"
          git push
