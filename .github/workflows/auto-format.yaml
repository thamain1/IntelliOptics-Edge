name: Auto Format

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write


jobs:
  format:
    name: Auto format on PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch

env:
  PYTHON_VERSION: "3.11"

jobs:
  format:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Get code

        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}


      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry 1.8.3 (via pip)
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry==1.8.3"
          poetry --version

      - name: Install formatting deps
        run: |
          if [ -f Makefile ]; then
            make install-lint || true
          fi
          # Fallback to ensure tools exist even if Makefile no-ops
          python -m pip install black ruff isort yamllint || true

      - name: Run formatters

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry via pipx (1.8.3)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          python -m pipx ensurepath
          ~/.local/bin/pipx install "poetry==1.8.3"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "PATH=$HOME/.local/bin:$PATH" >> "$GITHUB_ENV"

      - name: Install lint deps
        run: |
          poetry --version
          make install-lint

      - name: Run formatter
        run: make format

      - name: Check for modified files
        id: git-check

        run: |
          set -e
          if [ -f Makefile ]; then
            make format || true
          else
            black .
            ruff check . --fix || true
            isort . || true
          fi


      - name: Commit changes back to PR
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: auto-format via CI"
          branch: ${{ github.head_ref }}
          file_pattern: |
            **/*.py
            **/*.yaml
            **/*.yml
            **/*.toml
            **/*.md

      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name "Auto-format Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git commit -am "Automatically reformatting code with black and isort"
          git push

