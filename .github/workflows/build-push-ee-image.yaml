name: build-push-ee-image
# This workflow is split into a separate file and called via workflow_call to enable triggering it
# from other repositories, to test new inference images. 
on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      ref:
        required: true
        type: string

      acr_name:
        description: Azure Container Registry name (e.g. acrintellioptics)
        required: true
        type: string
      acr_login_server:
        description: Azure Container Registry login server (e.g. acrintellioptics.azurecr.io)
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:

    secrets:

      REGISTRY_LOGIN_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:

      ACR_LOGIN_SERVER:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true
jobs:
  build-push-edge-endpoint-multiplatform:
    # This used to run on a larger runner, but to use it as a reusable workflow outside of this
    # orgnaization we need it to run on a default github runner. 
    # If we start seeing issues with the default runner again, there are some hacks to delete
    # unwanted software that's installed by default on the github runners to free up space. This is
    # already done in the test-k3s-helm workflow.
    runs-on: ubuntu-latest
    steps:

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ inputs.acr_name }}

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}


      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}



      - name: Check out code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}


      - name: Build and Push Multiplatform edge-endpoint Image
        # This is actually only taking about 4 minutes right now.
        timeout-minutes: 45
        env:
          REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}


      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login \
            "${{ secrets.ACR_LOGIN_SERVER }}" \
            --username "${{ secrets.ACR_USERNAME }}" \
            --password-stdin
      - name: Build and Push Multiplatform edge-endpoint Image to ACR
        # This is actually only taking about 4 minutes right now.
        timeout-minutes: 45
        env:

          ACR_NAME: ${{ inputs.acr_name }}
          ACR_LOGIN_SERVER: ${{ inputs.acr_login_server }}

          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

        run: ./deploy/bin/build-push-edge-endpoint-image.sh
