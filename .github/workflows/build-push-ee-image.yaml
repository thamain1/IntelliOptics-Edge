name: build-push-ee-image
# This workflow is split into a separate file and called via workflow_call to enable triggering it
# from other repositories, to test new inference images.
on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      ref:
        required: true
        type: string
      acr_name:
        description: Azure Container Registry name (e.g. acrintellioptics)
        required: true
        type: string
      acr_login_server:
        description: Azure Container Registry login server (e.g. acrintellioptics.azurecr.io)
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      REGISTRY_LOGIN_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      ACR_LOGIN_SERVER:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

jobs:
  build-push-edge-endpoint-multiplatform:
    # This used to run on a larger runner, but to use it as a reusable workflow outside of this
    # organization we need it to run on a default GitHub runner.
    runs-on: ubuntu-latest
    env:
      REGISTRY_PROVIDER: ${{ vars.REGISTRY_PROVIDER || 'azure' }}
      ACR_NAME: ${{ inputs.acr_name }}
      ACR_LOGIN_SERVER: ${{ inputs.acr_login_server }}
      ACR_RESOURCE_GROUP: ${{ vars.ACR_RESOURCE_GROUP || '' }}
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry (CLI)
        if: ${{ env.ACR_NAME != '' }}
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Check out code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}

      - name: Build and Push Multiplatform edge-endpoint Image
        env:
          REGISTRY_PROVIDER: ${{ env.REGISTRY_PROVIDER }}
          REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          ACR_NAME: ${{ env.ACR_NAME }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        run: ./deploy/bin/build-push-edge-endpoint-image.sh --registry-provider ${{ env.REGISTRY_PROVIDER }}
