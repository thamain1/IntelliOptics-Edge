name: Test K3s & Helm (manual)

on:
  workflow_dispatch:
    inputs:
      helm_action:
        description: "What to do"
        type: choice
        required: true
        default: lint
        options: [lint, dry-run]
      chart_path:
        description: "Path to Helm chart"
        type: string
        required: true
        default: deploy/helm/intellioptics-edge-endpoint/intellioptics-edge-endpoint
      namespace:
        description: "K8s namespace for dry-run rendering"
        type: string
        required: false
        default: default
      values_file:
        description: "Optional values file (relative path)"
        type: string
        required: false
        default: ""
      blob_url:
        description: "Optional override: pinamodStorage.blobUrl (paste full SAS URL)"
        type: string
        required: false
        default: ""
      api_token:
        description: "Optional override: IntelliOptics API token"
        type: string
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  helm:
    name: Helm ${{ inputs.helm_action }}
    runs-on: ubuntu-latest
    env:
      # Fallback secrets (configure these in Settings → Secrets and variables → Actions)
      API_TOKEN_SECRET: ${{ secrets.INTELLIOPTICS_API_TOKEN }}
      BLOB_URL_SECRET: ${{ secrets.INTELLIOPTICS_MODEL_URI }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Show Helm version
        run: helm version

      - name: Helm lint
        if: inputs.helm_action == 'lint'
        run: |
          set -e
          CHART="${{ inputs.chart_path }}"
          if [ -n "${{ inputs.values_file }}" ]; then
            helm lint "$CHART" -f "${{ inputs.values_file }}"
          else
            helm lint "$CHART"
          fi

      - name: Helm template (dry-run render)
        if: inputs.helm_action == 'dry-run'
        run: |
          set -e
          CHART="${{ inputs.chart_path }}"
          NS="${{ inputs.namespace }}"
          EXTRA=""

          # values file (optional)
          if [ -n "${{ inputs.values_file }}" ]; then
            EXTRA="$EXTRA -f '${{ inputs.values_file }}'"
          fi

          # blob url: prefer input, else secret
          BLOB_URL_IN="${{ inputs.blob_url }}"
          if [ -z "$BLOB_URL_IN" ] && [ -n "$BLOB_URL_SECRET" ]; then
            BLOB_URL_IN="$BLOB_URL_SECRET"
          fi
          if [ -n "$BLOB_URL_IN" ]; then
            EXTRA="$EXTRA --set-string pinamodStorage.blobUrl='$BLOB_URL_IN'"
          fi

          # api token: prefer input, else secret
          API_TOKEN_IN="${{ inputs.api_token }}"
          if [ -z "$API_TOKEN_IN" ] && [ -n "$API_TOKEN_SECRET" ]; then
            API_TOKEN_IN="$API_TOKEN_SECRET"
          fi
          if [ -n "$API_TOKEN_IN" ]; then
            EXTRA="$EXTRA --set-string intelliopticsApiToken='$API_TOKEN_IN'"
          fi

          # Render
          eval helm template edge "$CHART" -n "$NS" $EXTRA > rendered.yaml
          echo "Rendered manifest size:"; wc -c rendered.yaml
          echo "::group::Preview (first 400 lines)"; head -n 400 rendered.yaml; echo "::endgroup::"