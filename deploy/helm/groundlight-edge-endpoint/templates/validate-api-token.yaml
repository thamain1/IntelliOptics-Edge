{{- $check := required "You must supply a IntelliOptics API token!" .Values.intelliopticsApiToken }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: validate-api-token-{{ .Values.namespace }}
  namespace: default
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0 # Do not retry the job
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: main
          image: {{ printf "%s/intellioptics/edge-endpoint:%s" .Values.azure.loginServer (include "IntelliOptics-edge-endpoint.edgeEndpointTag" .) }}
          imagePullPolicy: "{{ include "IntelliOptics-edge-endpoint.edgeEndpointPullPolicy" . }}"
          env:
            - name: INTELLIOPTICS_ENDPOINT
              value: "{{ .Values.upstreamEndpoint }}"
            - name: INTELLIOPTICS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: IntelliOptics-api-token-validate-{{ .Values.namespace }}
                  key: INTELLIOPTICS_API_TOKEN
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              endpoint="${INTELLIOPTICS_ENDPOINT%/}"
              if [ -z "$endpoint" ]; then
                echo "INTELLIOPTICS_ENDPOINT is not set" >&2
                exit 1
              fi
              url="${endpoint%/}/reader-credentials"
              echo "Validating IntelliOptics API token against ${url}"
              status=$(curl -s -o /dev/null -w "%{http_code}" -H "x-api-token: ${INTELLIOPTICS_API_TOKEN}" "$url")
              if [ "$status" != "200" ]; then
                echo "Token validation failed with status $status" >&2
                exit 1
              fi
              echo "Token validation succeeded"
---
apiVersion: v1
kind: Secret
metadata:
  name: IntelliOptics-api-token-validate-{{ .Values.namespace }}
  namespace: default
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"  # Ensure it runs before the job
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
type: Opaque
data:
  INTELLIOPTICS_API_TOKEN: {{ .Values.intelliopticsApiToken | b64enc | quote }}


