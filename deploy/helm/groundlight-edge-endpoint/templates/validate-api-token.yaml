{{- $check := required "You must supply a IntelliOptics API token!" .Values.intelliopticsApiToken }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: validate-api-token-{{ .Values.namespace }}
  namespace: default
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0 # Do not retry the job
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: main
          image: alpine:3.19

          env:
            - name: INTELLIOPTICS_ENDPOINT
              value: "{{ .Values.upstreamEndpoint }}"
            - name: INTELLIOPTICS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: IntelliOptics-api-token-validate-{{ .Values.namespace }}
                  key: INTELLIOPTICS_API_TOKEN
          command:
            - /bin/sh
            - -c
            - apk add --no-cache bash curl jq && exec /app/init-intellioptics-access-retrieve.sh validate
          volumeMounts:
            - name: validate-api-token-script
              mountPath: /app/init-intellioptics-access-retrieve.sh
              subPath: init-intellioptics-access-retrieve.sh
      volumes:
        - name: validate-api-token-script
          configMap:
            name: validate-api-token-script-{{ .Values.namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: validate-api-token-script-{{ .Values.namespace }}
  namespace: default
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"  # Ensure it runs before the job
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
  init-intellioptics-access-retrieve.sh: |
    {{- tpl (.Files.Get "files/init-intellioptics-access-retrieve.sh") . | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: IntelliOptics-api-token-validate-{{ .Values.namespace }}
  namespace: default
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"  # Ensure it runs before the job
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
type: Opaque
data:
  INTELLIOPTICS_API_TOKEN: {{ .Values.intelliopticsApiToken | b64enc | quote }}


