apiVersion: batch/v1
kind: Job
metadata:
  name: warmup-inference-model
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: registry-credentials
      containers:
      - name: image-puller
image: acrintellioptics.azurecr.io/intellioptics/edge-endpoint:latest
        command: ["echo", "Successfully pulled image to warm cache"]
      - name: sync-pinamod

        command: ['sh', '-c', 'mkdir -p "$PINAMOD_DIR"; if [ -n "$MODEL_SYNC_COMMAND" ]; then eval "$MODEL_SYNC_COMMAND"; else echo "Skipping model sync; MODEL_SYNC_COMMAND not set."; fi']
        env:
        - name: MODEL_SYNC_COMMAND
          valueFrom:
            configMapKeyRef:
              name: inference-deployment-template
              key: model_sync_command
              optional: true
        - name: PINAMOD_DIR
          value: /opt/models/pinamod-public/pinamod
        envFrom:
        - secretRef:
            name: artifact-storage-credentials
            optional: true
        volumeMounts:
        - name: pina-models
          mountPath: /opt/models
      volumes:
      - name: pina-models
        persistentVolumeClaim:
          claimName: edge-endpoint-pvc
      - name: artifact-credentials
        secret:
          secretName: artifact-storage-credentials
  backoffLimit: 2


