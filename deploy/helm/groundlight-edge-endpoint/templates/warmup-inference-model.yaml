apiVersion: batch/v1
kind: Job
metadata:
  name: warmup-inference-model
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "IntelliOptics-edge-endpoint.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      restartPolicy: OnFailure
      imagePullSecrets:
      - name: registry-credentials
      containers:
      - name: image-puller
        image: {{ .Values.acrLoginServer }}/intellioptics/edge-endpoint:{{ include "IntelliOptics-edge-endpoint.edgeEndpointTag" . }}
        command: ["echo", "Successfully pulled image to warm cache"]
      - name: sync-pinamod
        image: {{ .Values.registryCredentials.azureCliImage }}
        command: ['sh', '-c', 'set -euo pipefail; mkdir -p "$PINAMOD_DIR" && az storage blob download-batch --connection-string "$AZURE_STORAGE_CONNECTION_STRING" --source "$PINAMOD_CONTAINER" --destination "$PINAMOD_DIR" --no-progress --overwrite true']
        env:
        - name: PINAMOD_DIR
          value: /opt/models/pinamod-public/pinamod
        - name: PINAMOD_CONTAINER
          value: "{{ .Values.pinamodContainer }}"
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azure-service-principal
              key: AZURE_STORAGE_CONNECTION_STRING
        volumeMounts:
        - name: pina-models
          mountPath: /opt/models
      volumes:
      - name: pina-models
        persistentVolumeClaim:

          claimName: {{ .Values.storage.data.claimName }}
      - name: aws-credentials
        secret:
          secretName: aws-credentials-file

          claimName: edge-endpoint-pvc

  backoffLimit: 2


