# Default values for IntelliOptics-edge-endpoint.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# The Kubernetees namespace where the Edge Endpoint will be deployed
# We recommend that you don't change this value unless you're doing something unusual
# like running more that one instance of the Edge Endpoint in the same cluster
namespace: "edge"

# The tag to use for the images. The value of `imageTag` is used for both the edge-endpoint and
# inference images, unless you add a specific tag for one or the other image
imageTag: "release"
edgeEndpointTag: ""
inferenceTag: ""

# The image pull policy for the containers.
# The default value is "Always" which means that Kubernetes will always check to see if there's 
# a new version of the image with the requested tag available when starting containers.
imagePullPolicy: "Always"

# The port that the Edge Endpoint will listen on on the host. 
# Within the cluster, edge-endpoint always listens on port 30101 and can be addressed by 
# other services in the cluster on that port using
# http://edge-endpoint-service.edge.svc.cluster.local:30101/ (or substitute the appropriate
# namespace if you've overriden the default value).
edgeEndpointPort: 30101

# This is used as the base of the name for the PersistentVolume. The full name of the volume is 
# created by appending the namespace to this value. Generally, this should not be overridden.
# The PersistentVolume is used to store the model files and other data that the Edge Endpoint wants
# to persist between restarts. It is mapped to `/opt/intellioptics/edge` on the host.
persistentVolumeNameBase: "edge-endpoint-pv"

# Edge Endpoint will default to using the GPU for inference. If you want to use the CPU instead,
# set this value to "cpu".
inferenceFlavor: "gpu"

# The user must provide the IntelliOptics API token as input or the deployment will fail
intelliopticsApiToken: ""

# For escalations and audits and calls that aren't handled by the Edge Endpoint, we forward
# to the IntelliOptics service in the cloud. If you're testing against another version
# of the IntelliOptics service (e.g., your own dev environment or the integ environment),
# you can override this value.
upstreamEndpoint: "https://intellioptics-api-37558.azurewebsites.net"

# Currently, all IntelliOptics services are deployed in the us-west-2 region
awsRegion: "us-west-2"

ecrRegistry: "767397850842.dkr.ecr.us-west-2.amazonaws.com"

# This sets the log level for all the containers, both edge endpoint and inference.
logLevel: "INFO"

# Configuration for downloading the Pinamod model artifacts from Azure Blob Storage.
# `blobUrl` should point to the container path that contains the Pinamod files. It can
# optionally omit the SAS token if you're using a managed identity or if the container
# is publicly accessible. When using a SAS token, include only the query string portion
# (e.g. `?sv=...`).
pinamodStorage:
  blobUrl: ""
  # Set to true if the cluster uses a managed identity that can access the blob.
  useManagedIdentity: false
  # Optional: provide the client ID of the managed identity.
  managedIdentityClientId: ""
  # Optional: provide the tenant ID for the managed identity.
  managedIdentityTenantId: ""
  # Optional SAS token secret reference. Leave blank when using managed identity.
  sasTokenSecretName: ""
  sasTokenSecretKey: "sasToken"

# These values override the automated settings in _helpers.tpl to keep this short and sweet
# Don't override these
nameOverride: "edge-endpoint"
fullnameOverride: "edge-endpoint"

# Set some sensible limits on memory usage to avoid system crashing
k3sConfig:
  enabled: true
  evictionHardPercent: "15"
  evictionSoftPercent: "25" 
  evictionHardMinGB: "4"
  evictionSoftMinGB: "8"
  evictionGracePeriod: "10s"

serviceAccount:
  create: true
  name: ""


