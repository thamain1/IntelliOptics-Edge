apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "209"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"name":"edge-endpoint-noauth","namespace":"intellioptics-edge"},"spec":{"template":{"spec":{"containers":[{"args":["cat \u003e/tmp/mini_app.py \u003c\u003c'PY'\nfrom fastapi import FastAPI, Body\napp = FastAPI()\n\n@app.get(\"/v1/status\")\nasync def status():\n    return {\"ok\": True, \"status\": \"ready\"}\n\n@app.post(\"/v1/image-queries/{image_query_id}/human-label\")\nasync def human_label(image_query_id: str, body: dict = Body(...)):\n    label = (body or {}).get(\"label\")\n    reason = (body or {}).get(\"reason\")\n    return {\"ok\": True, \"image_query_id\": image_query_id, \"label\": label, \"reason\": reason}\nPY\nexec uvicorn --app-dir /tmp mini_app:app --host 0.0.0.0 --port 8080\n"],"command":["/bin/sh","-lc"],"name":"api"}]}}}}
  creationTimestamp: "2025-10-08T06:45:24Z"
  generation: 210
  name: edge-endpoint-noauth
  namespace: intellioptics-edge
  resourceVersion: "8907346"
  uid: 46ae61a7-cea5-4935-8fc5-5adc8387146c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: edge-endpoint-noauth
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-10-16T18:22:13-05:00"
      creationTimestamp: null
      labels:
        app: edge-endpoint-noauth
        config: v2
    spec:
      containers:
      - args:
        - exec uvicorn app.main:app --host 0.0.0.0 --port 8080
        command:
        - /bin/sh
        - -lc
        env:
        - name: SERVICE_BUS_CONN
          valueFrom:
            secretKeyRef:
              key: SERVICE_BUS_CONN
              name: sb-conn
        - name: QUEUE_IN
          value: image-queries
        - name: QUEUE_OUT
          value: inference-results
        - name: DATABASE_URL
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: SQLALCHEMY_DATABASE_URI
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: POSTGRES_HOST
          value: 127.0.0.1
        - name: POSTGRES_DB
          value: intellioptics
        - name: POSTGRES_USER
          value: postgres
        - name: DATABASE_HOST
          value: 127.0.0.1
        - name: PGHOST
          value: 127.0.0.1
        - name: PGDATABASE
          value: intellioptics
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          value: f9dba22752b343b993587b7a2f4d0bc9!A9z
        - name: POSTGRES_PORT
          value: "5432"
        - name: DATABASE_PORT
          value: "5432"
        - name: PGPORT
          value: "5432"
        - name: PGSSLMODE
          value: disable
        - name: POSTGRES_DSN
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: AZ_BLOB_CONTAINER
          value: images
        - name: AZ_BLOB_ACCOUNT
          value: intelliopticsweb37558
        - name: BLOB_ACCOUNT_URL
          value: https://intelliopticsweb37558.blob.core.windows.net
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              key: AZURE_STORAGE_CONNECTION_STRING
              name: blob-conn
        - name: BLOB_CONTAINER
          value: images
        image: acrintellioptics.azurecr.io/intellioptics-api:fix-humanlabel-20251016150346
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /v1/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 3
        name: api
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /v1/status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/app/main.py
          name: edge-api-main
          readOnly: true
          subPath: main.py
      - env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: POSTGRES_DB
          value: intellioptics
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_HOST
          value: 127.0.0.1
        - name: POSTGRES_PORT
          value: "5432"
        - name: PGHOST
          value: 127.0.0.1
        - name: PGPORT
          value: "5432"
        - name: PGDATABASE
          value: intellioptics
        - name: PGUSER
          value: postgres
        - name: PGSSLMODE
          value: disable
        - name: DATABASE_URL
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: SQLALCHEMY_DATABASE_URI
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: POSTGRES_DSN
          value: postgresql+psycopg://postgres@127.0.0.1:5432/intellioptics?sslmode=disable
        - name: DATABASE_HOST
          value: 127.0.0.1
        - name: DATABASE_PORT
          value: "5432"
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              key: AZURE_STORAGE_CONNECTION_STRING
              name: blob-conn
        - name: AZ_BLOB_CONTAINER
          value: images
        - name: AZ_BLOB_ACCOUNT
          value: intelliopticsweb37558
        - name: BLOB_CONTAINER
          value: images
        - name: BLOB_ACCOUNT_URL
          value: https://intelliopticsweb37558.blob.core.windows.net
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: edge-api-main
        name: edge-api-main
      - configMap:
          defaultMode: 420
          name: edge-open-routes
        name: open-routes
      - emptyDir: {}
        name: pgdata
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-10-16T22:13:35Z"
    lastUpdateTime: "2025-10-16T22:13:35Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-10-17T00:33:48Z"
    lastUpdateTime: "2025-10-17T00:34:01Z"
    message: ReplicaSet "edge-endpoint-noauth-9d5597d55" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 210
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
